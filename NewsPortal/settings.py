"""
Django settings for NewsPortal project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3gduxe_lp&@aa+h+0mf1o3_oos3g3b3xg=tz*u4yl85dj)3u7@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'django_filters',
    'django_apscheduler',

    'fpages',
    'news.apps.NewsConfig',
    'accounts',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',


]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',

    'log_middleware.FilterLevels',
]

ROOT_URLCONF = 'NewsPortal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

WSGI_APPLICATION = 'NewsPortal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
ACCOUNT_FORMS = {'signup': 'accounts.forms.BasicSignupForm'}

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_LOGOUT_REDIRECT_URL = '/portal/'
LOGIN_REDIRECT_URL = '/portal/'
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

DATETIME_FORMAT = '%d.%m.%Y %H:%M'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
LOGIN_URL = '/accounts/login/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [
    BASE_DIR / "static"
]
# Email properties
EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'newsportaltest'
EMAIL_HOST_PASSWORD = 'uxrxfnckyovgthkf'
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER + '@yandex.ru'

APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"

APSCHEDULER_RUN_NOW_TIMEOUT = 25

# Celery properties
CELERY_BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'

LOGGING = {
    'version': 1,
    'disable_existing_loggers ': False,
    'style': '{',
    'formatters': {
        'console_debug_format': {
            'format': '%(asctime)s %(levelname)s %(message)s'
        },
        'console_warning_format': {
            'format': '%(asctime)s %(levelname)s %(pathname)s %(message)s'
        },
        'console_error_format': {
            'format': '%(asctime)s %(levelname)s %(pathname)s %(message)s %(exc_info)s'
        },
        'errors_error_format': {
            'format': '%(asctime)s %(levelname)s %(pathname)s %(message)s %(exc_info)s'
        },
        'mail_error_format': {
            'format': '%(asctime)s %(levelname)s %(pathname)s %(message)s'
        },
        'general_info_format': {
            'format': '%(asctime)s %(levelname)s %(module) %(message)s'
        },
        'security_format': {
            'format': '%(asctime)s %(levelname)s %(module) %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
                    '()': 'django.utils.log.RequireDebugTrue',
            },
        'require_debug_false': {
                    '()': 'django.utils.log.RequireDebugFalse',
            },
        'console_debug_filter': {
            '()': 'log_middleware.FilterLevels',
            'filter_levels': ["DEBUG"]
        },
        'console_debug_warning': {
            '()': 'log_middleware.FilterLevels',
            'filter_levels': ["WARNING"]
        },
        'console_debug_error': {
            '()': 'log_middleware.FilterLevels',
            'filter_levels': ["WARNING"]
        },
    },
    'handlers': {
        'console_debug_handler': {
            'formatter': 'console_debug_format',
            'class': 'logging.StreamHandler',
            'filters': ['console_debug_filter', 'require_debug_true'],
        },
        'console_warning_handler': {
            'formatter': 'console_warning_format',
            'class': 'logging.StreamHandler',
            'filters': ['console_warning_filter', 'require_debug_true'],
        },
        'console_error_handler': {
            'formatter': 'console_error_format',
            'class': 'logging.StreamHandler',
            'filters': ['console_error_filter', 'require_debug_true'],
        },
        'general_info_handler': {
            'level': 'INFO',
            'formatter': 'general_info_format',
            'class': 'logging.FileHandler',
            'filters': ['require_debug_false'],
            'filename': 'general.log'
        },
        'error_handler': {
            'level': 'ERROR',
            'formatter': 'errors_error_format',
            'class': 'logging.FileHandler',
            'filename': 'errors.log'
        },
        'security_handler': {
            'level': 'DEBUG',
            'formatter': 'security_format',
            'class': 'logging.FileHandler',
            'filename': 'security.log'
        },
        'email_handler': {
            'level': 'ERROR',
            'formatter': 'mail_error_format',
            'class': 'django.utils.log.AdminEmailHandler',
            'filters': ['require_debug_false'],
        },
    },
    'loggers': {
        'django': {
            'handlers': [
                'console_debug_handler',
                'console_warning_handler',
                'console_error_handler',
                'general_info_handler'
            ],
            'propagate': True,
        },
        'django.request': {
            'handlers': ['error_handler', 'email_handler'],
            'propagate': False,
        },
        'django.server': {
            'handlers': ['error_handler', 'email_handler'],
            'propagate': False,
        },
        'django.template': {
            'handlers': ['error_handler'],
            'propagate': False,
        },
        'django.db.backends': {
            'handlers': ['error_handler'],
            'propagate': False,
        },
        'django.security': {
            'handlers': ['security_handler'],
            'propagate': False,
        },
    }
}